---
layout:     post
title:      "[Linux] 리눅스 커맨드 정리"

date:       2023-07-08 19:41:00
author:     "신희준"
header-img: "img/background.jpg"
comments: true
---

<head>
 <meta property="og:type" content="Linux Command">
 <meta property="og:title" content="Linux Command">
 <meta property="og:description" content="Linux Command">
 <meta property="og:url" content="http://shj7242.github.io/2023/07/08/linux1/">

 <meta name="twitter:card" content="Linux Command">
  <meta name="twitter:title" content="Linux Command">
  <meta name="twitter:description" content="Linux Command">
  <meta name="FACEBOOK:domain" content="http://shj7242.github.io/2023/07/08/linux1/">
  <meta name="facebook:card" content="Linux Command">
   <meta name="facebook:title" content="Linux Command">
   <meta name="facebook:description" content="Linux Command">
   <meta name="facebook:domain" content="http://shj7242.github.io/2023/07/08/linux1/">


 </head>

<br>
<H4 style ="font-weight:bold; color:black;"> </H4>

<H4 style ="font-weight:bold; color : black">2023 - 07 - 08 (토)</H4>
<br>


<p style = "font-weight:bold; color:deepskyblue; font-size:25px; font-style:italic;">Linux Command</p>

- Spring AOP 의 일종이다.

- Transaction 의 시작 종료 등 스프링에서 트랜잭션 처리를 관리한다.
    * 트랜잭션 시작시 begin
    * 정상처리시 Commit
    * 중간에 예외발생시 Rollback

<p style = "font-weight:bold; color:deepskyblue; font-size:25px; font-style:italic;">사용방법</p>

  ~~~java
  //예시1
  @Service
  @Transactional
    public class UserService{
        
        public String login(){
            
        }

    }   
  ~~~
  ~~~java
  //예시2
  @Service
    public class UserService{
        @Transactional
        public String login(){
            
        }

    }   
  ~~~

  - 위의 예시처럼 클래스 또는 메소드위에 @Transactional 어노테이션을 붙여 사용
